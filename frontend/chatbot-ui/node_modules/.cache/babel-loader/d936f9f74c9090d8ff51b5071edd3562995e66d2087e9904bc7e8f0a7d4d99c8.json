{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Card,CardContent,TextField,Button,Typography,IconButton}from\"@mui/material\";import ChatIcon from\"@mui/icons-material/Chat\";import CloseIcon from\"@mui/icons-material/Close\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[isOpen,setIsOpen]=useState(false);const chatBoxRef=useRef(null);useEffect(()=>{if(chatBoxRef.current){chatBoxRef.current.scrollTop=chatBoxRef.current.scrollHeight;}},[messages]);const toggleChat=()=>{setIsOpen(!isOpen);};const sendMessage=async()=>{if(!input.trim())return;const userMessage={text:input,sender:\"user\"};setMessages(prevMessages=>[...prevMessages,userMessage]);setInput(\"\");// Clears input immediately after sending\ntry{const response=await fetch(\"http://127.0.0.1:5000/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({session_id:\"user1\",query:input})});const data=await response.json();const botMessage={text:data.response,sender:\"bot\"};setMessages(prevMessages=>[...prevMessages,botMessage]);}catch(error){console.error(\"Error:\",error);setMessages(prevMessages=>[...prevMessages,{text:\"Error occurred\",sender:\"bot\"}]);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:toggleChat,sx:{position:\"fixed\",bottom:20,right:20,backgroundColor:\"#007bff\",color:\"white\",\"&:hover\":{backgroundColor:\"#0056b3\"}},children:isOpen?/*#__PURE__*/_jsx(CloseIcon,{}):/*#__PURE__*/_jsx(ChatIcon,{})}),isOpen&&/*#__PURE__*/_jsx(Card,{sx:{position:\"fixed\",bottom:80,right:20,width:350,height:450,boxShadow:5,display:\"flex\",flexDirection:\"column\",transition:\"transform 0.3s ease-in-out\"},children:/*#__PURE__*/_jsxs(CardContent,{sx:{flex:1,display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Chatbot\"}),/*#__PURE__*/_jsx(\"div\",{ref:chatBoxRef,style:{flex:1,overflowY:\"auto\",padding:\"10px\"},children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:msg.sender===\"user\"?\"flex-end\":\"flex-start\",marginBottom:\"10px\"},children:/*#__PURE__*/_jsx(Typography,{sx:{backgroundColor:msg.sender===\"user\"?\"#007bff\":\"#f1f1f1\",color:msg.sender===\"user\"?\"white\":\"black\",padding:\"10px\",borderRadius:\"15px\",maxWidth:\"75%\",wordWrap:\"break-word\",textAlign:\"left\",lineHeight:\"1.4\"},children:msg.text})},index))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type a message...\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage()}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:sendMessage,sx:{mt:1},children:\"Send\"})]})})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","TextField","Button","Typography","IconButton","ChatIcon","CloseIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chatbot","messages","setMessages","input","setInput","isOpen","setIsOpen","chatBoxRef","current","scrollTop","scrollHeight","toggleChat","sendMessage","trim","userMessage","text","sender","prevMessages","response","fetch","method","headers","body","JSON","stringify","session_id","query","data","json","botMessage","error","console","children","onClick","sx","position","bottom","right","backgroundColor","color","width","height","boxShadow","display","flexDirection","transition","flex","variant","align","ref","style","overflowY","padding","map","msg","index","justifyContent","marginBottom","borderRadius","maxWidth","wordWrap","textAlign","lineHeight","fullWidth","placeholder","value","onChange","e","target","onKeyDown","key","mt"],"sources":["/Users/omerfaruk/ChatBot_v1/frontend/chatbot-ui/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent, TextField, Button, Typography, IconButton } from \"@mui/material\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n    const [isOpen, setIsOpen] = useState(false);\n    const chatBoxRef = useRef(null);\n\n    useEffect(() => {\n        if (chatBoxRef.current) {\n            chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n        }\n    }, [messages]);\n\n    const toggleChat = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const sendMessage = async () => {\n        if (!input.trim()) return;\n    \n        const userMessage = { text: input, sender: \"user\" };\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\n        setInput(\"\"); // Clears input immediately after sending\n    \n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ session_id: \"user1\", query: input })\n            });\n\n            const data = await response.json();\n            const botMessage = { text: data.response, sender: \"bot\" };\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMessages((prevMessages) => [...prevMessages, { text: \"Error occurred\", sender: \"bot\" }]);\n\n        }\n        \n    };\n    \n\n    return (\n        <>\n            {/* Floating Button to Toggle Chat */}\n            <IconButton \n                onClick={toggleChat} \n                sx={{\n                    position: \"fixed\",\n                    bottom: 20,\n                    right: 20,\n                    backgroundColor: \"#007bff\",\n                    color: \"white\",\n                    \"&:hover\": { backgroundColor: \"#0056b3\" }\n                }}\n            >\n                {isOpen ? <CloseIcon /> : <ChatIcon />}\n            </IconButton>\n\n            {/* Chatbot Popup */}\n            {isOpen && (\n                <Card sx={{\n                    position: \"fixed\",\n                    bottom: 80,\n                    right: 20,\n                    width: 350,\n                    height: 450,\n                    boxShadow: 5,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    transition: \"transform 0.3s ease-in-out\"\n                }}>\n                    <CardContent sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n                        <Typography variant=\"h6\" align=\"center\">Chatbot</Typography>\n                        <div ref={chatBoxRef} style={{ flex: 1, overflowY: \"auto\", padding: \"10px\" }}>\n                            {messages.map((msg, index) => (\n                                <div key={index} style={{\n                                    display: \"flex\",\n                                    justifyContent: msg.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n                                    marginBottom: \"10px\"\n                                }}>\n                                    <Typography sx={{\n                                        backgroundColor: msg.sender === \"user\" ? \"#007bff\" : \"#f1f1f1\",\n                                        color: msg.sender === \"user\" ? \"white\" : \"black\",\n                                        padding: \"10px\",\n                                        borderRadius: \"15px\",\n                                        maxWidth: \"75%\",\n                                        wordWrap: \"break-word\",\n                                        textAlign: \"left\",\n                                        lineHeight: \"1.4\"\n                                    }}>\n                                        {msg.text}\n                                    </Typography>\n                                </div>\n                            ))}\n                        </div>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            placeholder=\"Type a message...\"\n                            value={input}\n                            onChange={(e) => setInput(e.target.value)}\n                            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n                        />\n                        <Button fullWidth variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ mt: 1 }}>\n                            Send\n                        </Button>\n                    </CardContent>\n                </Card>\n            )}\n        </>\n    );\n};\n\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}