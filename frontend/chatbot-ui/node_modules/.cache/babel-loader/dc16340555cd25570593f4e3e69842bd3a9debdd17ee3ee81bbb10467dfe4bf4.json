{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Card,CardContent,TextField,Button,Typography,IconButton}from\"@mui/material\";import ChatIcon from\"@mui/icons-material/Chat\";import CloseIcon from\"@mui/icons-material/Close\";import Brightness4Icon from\"@mui/icons-material/Brightness4\";import Brightness7Icon from\"@mui/icons-material/Brightness7\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[spinner,setSpinner]=useState(false);const[isOpen,setIsOpen]=useState(false);const[darkMode,setDarkMode]=useState(()=>{var _JSON$parse;return(_JSON$parse=JSON.parse(localStorage.getItem(\"darkMode\")))!==null&&_JSON$parse!==void 0?_JSON$parse:false;});const chatBoxRef=useRef(null);useEffect(()=>{if(chatBoxRef.current){const chatBox=chatBoxRef.current;chatBox.scrollTop=chatBox.scrollHeight;}},[messages]);useEffect(()=>{if(darkMode){document.body.classList.add(\"dark-mode\");}else{document.body.classList.remove(\"dark-mode\");}},[darkMode]);useEffect(()=>{const savedMode=JSON.parse(localStorage.getItem(\"darkMode\"));if(savedMode){setDarkMode(savedMode);}},[]);const toggleChat=()=>{setIsOpen(prev=>!prev);};const toggleDarkMode=()=>{setDarkMode(prev=>{const newMode=!prev;localStorage.setItem(\"darkMode\",JSON.stringify(newMode));return newMode;});};const sendMessage=async()=>{if(!input.trim())return;const userMessage={text:input,sender:\"user\"};setMessages(prevMessages=>[...prevMessages,userMessage]);setInput(\"\");// Add \"Bot is typing...\" before the actual response\nsetMessages(prevMessages=>[...prevMessages,{text:\"Bot is typing...\",sender:\"bot\",typing:true}]);try{const response=await fetch(\"http://127.0.0.1:5000/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({session_id:\"user1\",query:input})});const data=await response.json();// Remove \"Bot is typing...\" and add the real response\nsetMessages(prevMessages=>prevMessages.slice(0,-1).concat({text:data.response,sender:\"bot\"}));}catch(error){console.error(\"Error:\",error);setMessages(prevMessages=>prevMessages.slice(0,-1).concat({text:\"Error occurred\",sender:\"bot\"}));}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(IconButton,{onClick:toggleDarkMode,sx:{position:\"fixed\",bottom:150,right:20,zIndex:1000,backgroundColor:darkMode?\"#222\":\"#fff\",color:darkMode?\"white\":\"black\",\"&:hover\":{backgroundColor:darkMode?\"#444\":\"#ddd\"}},children:darkMode?/*#__PURE__*/_jsx(Brightness7Icon,{}):/*#__PURE__*/_jsx(Brightness4Icon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:toggleChat,sx:{position:\"fixed\",bottom:20,right:20,backgroundColor:\"#007bff\",color:\"white\",width:60,height:60,\"&:hover\":{backgroundColor:\"#0056b3\"}},children:isOpen?/*#__PURE__*/_jsx(CloseIcon,{}):/*#__PURE__*/_jsx(ChatIcon,{})}),isOpen&&/*#__PURE__*/_jsx(Card,{sx:{position:\"fixed\",bottom:isOpen?80:0,right:20,width:350,height:isOpen?450:0,boxShadow:isOpen?5:0,display:\"flex\",flexDirection:\"column\",opacity:isOpen?1:0,transition:\"opacity 0.3s ease-in-out, height 0.3s ease-in-out\"},children:/*#__PURE__*/_jsxs(CardContent,{sx:{flex:1,display:\"flex\",flexDirection:\"column\"},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Chatbot\"}),/*#__PURE__*/_jsx(\"div\",{ref:chatBoxRef,style:{flex:1,overflowY:\"auto\",padding:\"10px\",maxHeight:\"300px\",scrollBehavior:\"smooth\"},children:messages.map((msg,index)=>/*#__PURE__*/_jsx(\"div\",{style:{display:\"flex\",justifyContent:msg.sender===\"user\"?\"flex-end\":\"flex-start\",marginBottom:\"10px\"},children:/*#__PURE__*/_jsx(Typography,{sx:{backgroundColor:msg.sender===\"user\"?\"#007bff\":\"#f1f1f1\",color:msg.sender===\"user\"?\"white\":\"black\",padding:\"10px\",borderRadius:\"15px\",maxWidth:\"75%\",wordWrap:\"break-word\",textAlign:\"left\",lineHeight:\"1.4\",fontStyle:msg.typing?\"italic\":\"normal\"// Makes \"Bot is typing...\" look different\n},children:msg.text})},index))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type a message...\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage()}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:sendMessage,sx:{mt:1},children:\"Send\"})]})})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","useEffect","useRef","Card","CardContent","TextField","Button","Typography","IconButton","ChatIcon","CloseIcon","Brightness4Icon","Brightness7Icon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chatbot","messages","setMessages","input","setInput","spinner","setSpinner","isOpen","setIsOpen","darkMode","setDarkMode","_JSON$parse","JSON","parse","localStorage","getItem","chatBoxRef","current","chatBox","scrollTop","scrollHeight","document","body","classList","add","remove","savedMode","toggleChat","prev","toggleDarkMode","newMode","setItem","stringify","sendMessage","trim","userMessage","text","sender","prevMessages","typing","response","fetch","method","headers","session_id","query","data","json","slice","concat","error","console","children","onClick","sx","position","bottom","right","zIndex","backgroundColor","color","width","height","boxShadow","display","flexDirection","opacity","transition","flex","variant","align","ref","style","overflowY","padding","maxHeight","scrollBehavior","map","msg","index","justifyContent","marginBottom","borderRadius","maxWidth","wordWrap","textAlign","lineHeight","fontStyle","fullWidth","placeholder","value","onChange","e","target","onKeyDown","key","mt"],"sources":["/Users/omerfaruk/ChatBot_v1/frontend/chatbot-ui/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Card, CardContent, TextField, Button, Typography, IconButton } from \"@mui/material\";\nimport ChatIcon from \"@mui/icons-material/Chat\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness7Icon from \"@mui/icons-material/Brightness7\";\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n    const [spinner, setSpinner] = useState(false);\n    const [isOpen, setIsOpen] = useState(false);\n    const [darkMode, setDarkMode] = useState(() => {\n        return JSON.parse(localStorage.getItem(\"darkMode\")) ?? false;\n    });    \n    const chatBoxRef = useRef(null);\n\n    useEffect(() => {\n        if (chatBoxRef.current) {\n            const chatBox = chatBoxRef.current;\n            chatBox.scrollTop = chatBox.scrollHeight; \n        }\n    }, [messages]);\n\n    useEffect(() => {\n        if (darkMode) {\n            document.body.classList.add(\"dark-mode\");\n        } else {\n            document.body.classList.remove(\"dark-mode\");\n        }\n    }, [darkMode]);\n\n    useEffect(() => {\n        const savedMode = JSON.parse(localStorage.getItem(\"darkMode\"));\n        if (savedMode) {\n            setDarkMode(savedMode);\n        }\n    }, []);\n\n    const toggleChat = () => {\n        setIsOpen((prev) => !prev);\n    };\n\n    const toggleDarkMode = () => {\n        setDarkMode((prev) => {\n            const newMode = !prev;\n            localStorage.setItem(\"darkMode\", JSON.stringify(newMode));\n            return newMode;\n        });\n    };\n    \n    const sendMessage = async () => {\n        if (!input.trim()) return;\n    \n        const userMessage = { text: input, sender: \"user\" };\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\n        setInput(\"\");\n    \n        // Add \"Bot is typing...\" before the actual response\n        setMessages((prevMessages) => [...prevMessages, { text: \"Bot is typing...\", sender: \"bot\", typing: true }]);\n    \n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ session_id: \"user1\", query: input })\n            });\n    \n            const data = await response.json();\n    \n            // Remove \"Bot is typing...\" and add the real response\n            setMessages((prevMessages) => prevMessages.slice(0, -1).concat({ text: data.response, sender: \"bot\" }));\n    \n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMessages((prevMessages) => prevMessages.slice(0, -1).concat({ text: \"Error occurred\", sender: \"bot\" }));\n        }\n    };\n    \n    \n\n    return (\n        <>\n            {/* Dark Mode Toggle Button */}\n            <IconButton \n                onClick={toggleDarkMode} \n                sx={{ \n                    position: \"fixed\", \n                    bottom: 150, \n                    right: 20, \n                    zIndex: 1000,\n                    backgroundColor: darkMode ? \"#222\" : \"#fff\",\n                    color: darkMode ? \"white\" : \"black\",\n                    \"&:hover\": { backgroundColor: darkMode ? \"#444\" : \"#ddd\" }\n                }}>\n                {darkMode ? <Brightness7Icon /> : <Brightness4Icon />}\n            </IconButton>\n\n            {/* Floating Button to Toggle Chat */}\n            <IconButton \n                onClick={toggleChat} \n                sx={{\n                    position: \"fixed\",\n                    bottom: 20,\n                    right: 20,\n                    backgroundColor: \"#007bff\",\n                    color: \"white\",\n                    width: 60,\n                    height: 60,\n                    \"&:hover\": { backgroundColor: \"#0056b3\" }\n                }}\n            >\n                {isOpen ? <CloseIcon /> : <ChatIcon />}\n            </IconButton>\n\n            {/* Chatbot Popup */}\n            {isOpen && (\n                <Card sx={{\n                    position: \"fixed\",\n                    bottom: isOpen ? 80 : 0, \n                    right: 20,\n                    width: 350,\n                    height: isOpen ? 450 : 0,\n                    boxShadow: isOpen ? 5 : 0,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    opacity: isOpen ? 1 : 0, \n                    transition: \"opacity 0.3s ease-in-out, height 0.3s ease-in-out\"\n                }}>\n                    <CardContent sx={{ flex: 1, display: \"flex\", flexDirection: \"column\" }}>\n                        <Typography variant=\"h6\" align=\"center\">Chatbot</Typography>\n                        <div ref={chatBoxRef} style={{ flex: 1, overflowY: \"auto\", padding: \"10px\", maxHeight: \"300px\", scrollBehavior: \"smooth\"  }}>\n                        {messages.map((msg, index) => (\n                            <div key={index} style={{\n                                display: \"flex\",\n                                justifyContent: msg.sender === \"user\" ? \"flex-end\" : \"flex-start\",\n                                marginBottom: \"10px\"\n                            }}>\n                                <Typography sx={{\n                                    backgroundColor: msg.sender === \"user\" ? \"#007bff\" : \"#f1f1f1\",\n                                    color: msg.sender === \"user\" ? \"white\" : \"black\",\n                                    padding: \"10px\",\n                                    borderRadius: \"15px\",\n                                    maxWidth: \"75%\",\n                                    wordWrap: \"break-word\",\n                                    textAlign: \"left\",\n                                    lineHeight: \"1.4\",\n                                    fontStyle: msg.typing ? \"italic\" : \"normal\" // Makes \"Bot is typing...\" look different\n                                }}>\n                                    {msg.text}\n                                </Typography>\n                            </div>\n                        ))}\n                        </div>\n                        <TextField\n                            fullWidth\n                            variant=\"outlined\"\n                            placeholder=\"Type a message...\"\n                            value={input}\n                            onChange={(e) => setInput(e.target.value)}\n                            onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n                        />\n                        <Button fullWidth variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ mt: 1 }}>\n                            Send\n                        </Button>\n                    </CardContent>\n                </Card>\n            )}\n        </>\n    );\n};\n\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}