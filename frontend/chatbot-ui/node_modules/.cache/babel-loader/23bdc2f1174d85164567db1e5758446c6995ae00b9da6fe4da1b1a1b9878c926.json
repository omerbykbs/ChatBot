{"ast":null,"code":"import React,{useState}from\"react\";import{Card,CardContent,TextField,Button,Typography}from\"@mui/material\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const sendMessage=async()=>{if(!input.trim())return;setMessages([...messages,{text:input,sender:\"user\"}]);try{const response=await fetch(\"http://127.0.0.1:5000/chat\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({session_id:\"user1\",query:input})});const data=await response.json();setMessages([...messages,{text:input,sender:\"user\"},{text:data.response,sender:\"bot\"}]);}catch(error){console.error(\"Error:\",error);setMessages([...messages,{text:\"Error occurred\",sender:\"bot\"}]);}setInput(\"\");};return/*#__PURE__*/_jsx(Card,{sx:{maxWidth:400,margin:\"auto\",mt:5,boxShadow:3},children:/*#__PURE__*/_jsxs(CardContent,{children:[/*#__PURE__*/_jsx(Typography,{variant:\"h6\",align:\"center\",children:\"Chatbot\"}),/*#__PURE__*/_jsx(\"div\",{style:{height:300,overflowY:\"auto\",marginBottom:10},children:messages.map((msg,index)=>/*#__PURE__*/_jsx(Typography,{sx:{textAlign:msg.sender===\"user\"?\"right\":\"left\",backgroundColor:msg.sender===\"user\"?\"#007bff\":\"#f1f1f1\",color:msg.sender===\"user\"?\"white\":\"black\",padding:\"8px\",borderRadius:\"10px\",margin:\"5px 0\",display:\"inline-block\",maxWidth:\"80%\"},children:msg.text},index))}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",placeholder:\"Type a message...\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage()}),/*#__PURE__*/_jsx(Button,{fullWidth:true,variant:\"contained\",color:\"primary\",onClick:sendMessage,sx:{mt:2},children:\"Send\"})]})});};export default Chatbot;","map":{"version":3,"names":["React","useState","Card","CardContent","TextField","Button","Typography","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","sendMessage","trim","text","sender","response","fetch","method","headers","body","JSON","stringify","session_id","query","data","json","error","console","sx","maxWidth","margin","mt","boxShadow","children","variant","align","style","height","overflowY","marginBottom","map","msg","index","textAlign","backgroundColor","color","padding","borderRadius","display","fullWidth","placeholder","value","onChange","e","target","onKeyDown","key","onClick"],"sources":["/Users/omerfaruk/ChatBot_v1/frontend/chatbot-ui/src/Chatbot.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Card, CardContent, TextField, Button, Typography } from \"@mui/material\";\n\nconst Chatbot = () => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState(\"\");\n\n    const sendMessage = async () => {\n        if (!input.trim()) return;\n    \n        setMessages([...messages, { text: input, sender: \"user\" }]);\n    \n        try {\n            const response = await fetch(\"http://127.0.0.1:5000/chat\", {\n                method: \"POST\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({ session_id: \"user1\", query: input })\n            });\n    \n            const data = await response.json();\n            setMessages([...messages, { text: input, sender: \"user\" }, { text: data.response, sender: \"bot\" }]);\n        } catch (error) {\n            console.error(\"Error:\", error);\n            setMessages([...messages, { text: \"Error occurred\", sender: \"bot\" }]);\n        }\n    \n        setInput(\"\");\n    };\n    \n\n    return (\n        <Card sx={{ maxWidth: 400, margin: \"auto\", mt: 5, boxShadow: 3 }}>\n            <CardContent>\n                <Typography variant=\"h6\" align=\"center\">Chatbot</Typography>\n                <div style={{ height: 300, overflowY: \"auto\", marginBottom: 10 }}>\n                    {messages.map((msg, index) => (\n                        <Typography key={index} sx={{\n                            textAlign: msg.sender === \"user\" ? \"right\" : \"left\",\n                            backgroundColor: msg.sender === \"user\" ? \"#007bff\" : \"#f1f1f1\",\n                            color: msg.sender === \"user\" ? \"white\" : \"black\",\n                            padding: \"8px\",\n                            borderRadius: \"10px\",\n                            margin: \"5px 0\",\n                            display: \"inline-block\",\n                            maxWidth: \"80%\"\n                        }}>\n                            {msg.text}\n                        </Typography>\n                    ))}\n                </div>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    placeholder=\"Type a message...\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n                />\n                <Button fullWidth variant=\"contained\" color=\"primary\" onClick={sendMessage} sx={{ mt: 2 }}>\n                    Send\n                </Button>\n            </CardContent>\n        </Card>\n    );\n};\n\nexport default Chatbot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}